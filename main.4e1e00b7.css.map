{"version":3,"sources":["sass\\base\\_font-face.sass","sass\\vendors\\_reset.scss","sass\\base\\_root.sass","sass\\base\\_body.sass","sass\\base\\_typography.sass","sass\\base\\_media-queries.sass","sass\\base\\_utilities.sass","sass\\base\\_colors.sass","sass\\base\\_links.sass","sass\\layout\\_general.sass","sass\\layout\\_grid.sass","sass\\pages\\index.sass"],"names":[],"mappings":"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","file":"main.4e1e00b7.css","sourceRoot":"..\\src","sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400;0,600;1,400;1,600&family=Roboto:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap')\r\n\r\n// use mixin configuring the font stack\r\n@mixin font($group, $variant: regular, $properties: family weight style, $stack: $font-stack)\r\n    $font-properties: map-deep-get($stack, $group, $variant)\r\n\r\n    @if $font-properties\r\n        @each $property, $values in $font-properties\r\n            @if contains($properties, $property)\r\n                font-#{$property}: map-get($font-properties, $property)\r\n\r\n// configuring font stack\r\n// header\r\nh1, h2, h3, h4\r\n    @include font(roboto, bold)\r\n\r\n// base\r\np\r\n    @include font(lora, regular)\r\n\r\np.blocknote\r\n    @include font(lora, regular-italic)\r\n\r\na,\r\np.bold\r\n    @include font(lora, bold)\r\n","/* Box sizing rules */\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* Remove default padding */\r\nul[class],\r\nol[class] {\r\n  padding: 0;\r\n}\r\n\r\n/* Remove default margin */\r\nbody,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\np,\r\nul[class],\r\nol[class],\r\nli,\r\nfigure,\r\nfigcaption,\r\nblockquote,\r\ndl,\r\ndd {\r\n  margin: 0;\r\n}\r\n\r\n/* Set core body defaults */\r\nbody {\r\n  min-height: 100vh;\r\n  scroll-behavior: smooth;\r\n  text-rendering: optimizeSpeed;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Remove list styles on ul, ol elements with a class attribute */\r\nul[class],\r\nol[class] {\r\n  list-style: none;\r\n}\r\n\r\n/* A elements that don't have a class get default styles */\r\na:not([class]) {\r\n  text-decoration-skip-ink: auto;\r\n}\r\n\r\n/* Make images easier to work with */\r\nimg {\r\n  max-width: 100%;\r\n  display: block;\r\n}\r\n\r\n/* Natural flow and rhythm in articles by default */\r\narticle > * + * {\r\n  margin-top: 1em;\r\n}\r\n\r\n/* Inherit fonts for inputs and buttons */\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect {\r\n  font: inherit;\r\n}\r\n\r\n/* Remove all animations and transitions for people that prefer not to see them */\r\n@media (prefers-reduced-motion: reduce) {\r\n  * {\r\n    animation-duration: 0.01ms !important;\r\n    animation-iteration-count: 1 !important;\r\n    transition-duration: 0.01ms !important;\r\n    scroll-behavior: auto !important;\r\n  }\r\n}",":root\r\n    // add color variables\r\n    @each $color, $shades in $colors\r\n        @each $shade, $value in $shades\r\n            --clr-#{$color}-#{$shade}: #{$value}\r\n\r\n    // add media query breakpoints variables\r\n    @each $prop, $value in $breakpoints\r\n        --#{$prop}: #{$value}\r\n\r\n    // add layout variables\r\n    @each $screen-size, $variables in $layout\r\n        @if $screen-size == small\r\n            @each $prop, $value in $variables\r\n                --#{$prop}: #{$value}\r\n        @else\r\n            @media (min-width: 1024px)\r\n                @each $prop, $value in $variables\r\n                    --#{$prop}: #{$value}\r\n\r\n    // add responsive type-scale variables\r\n    @each $screen-size, $font-size in $type-scale\r\n        @if $screen-size == small\r\n            @each $prop, $value in $font-size\r\n                --#{$prop}: #{$value}\r\n        @else\r\n            @media (min-width: 1024px)\r\n                @each $prop, $value in $font-size\r\n                    --#{$prop}: #{$value}\r\n\r\n    // add grid variables\r\n    @each $prop, $value in $grid\r\n        --#{$prop}: #{$value}\r\n\r\n    // calculate type-scale and line-heights variable\r\n    --h4: calc(var(--font-size) * var(--ratio))\r\n    --h3: calc(var(--h4) * var(--ratio))\r\n    --h2: calc(var(--h3) * var(--ratio))\r\n    --h1: calc(var(--h2) * var(--ratio))\r\n","*\r\n    box-sizing: border-box\r\n\r\nhtml, body\r\n    height: 100%\r\n\r\nbody\r\n    @include font(lora, regular)\r\n    color: var(--clr-primary-300)\r\n    background: var(--clr-background-100)\r\n    -webkit-font-smoothing: antialiased\r\n    -webkit-text-size-adjust: 100%\r\n","p\r\n    font-size: var(--font-size)\r\n    line-height: calc(var(--font-size) * var(--ratio))\r\n\r\nh1\r\n    font-size: var(--h1)\r\n    line-height: calc(var(--h1) * var(--ratio))\r\n\r\nh2\r\n    font-size: var(--h2)\r\n    line-height: calc(var(--h2) * var(--ratio))\r\n\r\nh3\r\n    font-size: var(--h3)\r\n    line-height: calc(var(--h3) * var(--ratio))\r\n\r\nh4\r\n    font-size: var(--h4)\r\n    line-height: calc(var(--h4) * var(--ratio))\r\n\r\n// text decoartions\r\n.uppercase\r\n    text-transform: uppercase\r\n\r\n.blocknote\r\n    padding-left: var(--spacer)\r\n    border-left: var(--border) solid var(--clr-secondary-200)\r\n\r\n.letter-spacing\r\n    letter-spacing: var(--gap)\r\n\r\n// text columns\r\n.columns\r\n    column-gap: calc(var(--spacer) * 4)\r\n\r\n    &-2\r\n        column-count: 1\r\n        +mq(sm)\r\n            column-count: 2\r\n\r\n    &-3\r\n        column-count: 1\r\n        +mq(sm)\r\n            column-count: 2\r\n            +mq(lg)\r\n                column-count: 3\r\n    &-4\r\n        column-count: 1\r\n        +mq(sm)\r\n            column-count: 2\r\n            +mq(lg)\r\n                column-count: 3\r\n                +mq(xl)\r\n                    column-count: 4\r\n\r\n    &-line\r\n        column-rule: var(--border) solid var(--clr-background-200)\r\n","@mixin mq($key)\r\n    $size: map-get($breakpoints, $key)\r\n    @media (min-width: $size)\r\n        @content\r\n","@for $i from 1 through 5\r\n    // margin\r\n    .m-#{$i}\r\n        margin: calc(var(--spacer) * #{$i})\r\n    .m-x-#{$i}\r\n        margin: 0 calc(var(--spacer) * #{$i})\r\n    .m-y-#{$i}\r\n        margin: calc(var(--spacer) * #{$i}) 0\r\n    .m-l-#{$i}\r\n        margin-left: calc(var(--spacer) * #{$i})\r\n    .m-r-#{$i}\r\n        margin-right: calc(var(--spacer) * #{$i})\r\n    .m-t-#{$i}\r\n        margin-top: calc(var(--spacer) * #{$i})\r\n\r\n    // padding\r\n    .p-#{$i}\r\n        padding: calc(var(--spacer) * #{$i})\r\n    .p-x-#{$i}\r\n        padding: 0 calc(var(--spacer) * #{$i})\r\n    .p-y-#{$i}\r\n        padding: calc(var(--spacer) * #{$i}) 0\r\n    .p-l-#{$i}\r\n        padding-left: calc(var(--spacer) * #{$i})\r\n    .p-r-#{$i}\r\n        padding-right: calc(var(--spacer) * #{$i})\r\n    .p-t-#{$i}\r\n        padding-top: calc(var(--spacer) * #{$i})\r\n\r\n    // height\r\n    .h-#{$i}\r\n        height: calc(var(--spacer) * #{$i})\r\n\r\n    //width\r\n    .w-#{$i}\r\n        width: calc(var(--spacer) * #{$i})\r\n\r\n    //divider\r\n    .divider-#{$i}\r\n        height: calc(var(--spacer) * #{$i})\r\n        width: 100%\r\n","@each $color, $shades in $colors\r\n    @each $shade, $value in $shades\r\n        .text-#{$color}-#{$shade}\r\n            color: var(--clr-#{$color}-#{$shade})\r\n        .bg-#{$color}-#{$shade}\r\n            background: var(--clr-#{$color}-#{$shade})\r\n","a, ul, li\r\n    margin: 0\r\n    padding: 0\r\n    cursor: pointer\r\n\r\na\r\n    font-size: var(--font-size)\r\n    text-decoration: none\r\n    outline: 0\r\n    line-height: 0\r\n    opacity: 1\r\n    transition: opacity 0.3s ease-in-out\r\n    color: var(--clr-secondary-200)\r\n\r\n    &:hover,\r\n    &:focus\r\n        opacity: var(--opacity)\r\n\r\nul\r\n    list-style: none\r\n","// page container\r\n.container\r\n    width: calc(100% - var(--margin)*2)\r\n    max-width: var(--xl)\r\n    margin: 0 auto\r\n","$column: map-get($grid, column)\r\n\r\n.row\r\n    display: flex\r\n    flex-wrap: wrap\r\n\r\n[class^=col-]\r\n    flex-basis: 100%\r\n\r\n@for $i from 1 through $column\r\n    .col-#{$i}\r\n        padding: var(--gap)\r\n        flex: 0 0 100%\r\n        +mq(lg)\r\n            flex: 0 0 (100% / ($column / $i))\r\n    .col-offset-#{$i}\r\n        margin-left: 0\r\n        +mq(lg)\r\n            margin-left: 100% / ($column / $i)\r\n","// grid.pug    \r\n.col\r\n    height: 4rem\r\n\r\n    &-content\r\n        display: flex\r\n        align-items: center\r\n        justify-content: center\r\n        color: var(--clr-background-100)\r\n        height: 100%\r\n"]}