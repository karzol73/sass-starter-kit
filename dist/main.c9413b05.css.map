{"version":3,"sources":["sass\\vendors\\_reset.scss","sass\\base\\_font-face.sass","sass\\base\\_root.sass","sass\\base\\_typography.sass","sass\\base\\_body.sass","sass\\base\\_utilities.sass","sass\\base\\_colors.sass","sass\\base\\_links.sass","sass\\layout\\_general.sass","sass\\layout\\_grid.sass","sass\\base\\_media-queries.sass","sass\\pages\\index.sass"],"names":[],"mappings":"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","file":"main.c9413b05.css","sourceRoot":"..\\src","sourcesContent":["/* Box sizing rules */\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* Remove default padding */\r\nul[class],\r\nol[class] {\r\n  padding: 0;\r\n}\r\n\r\n/* Remove default margin */\r\nbody,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\np,\r\nul[class],\r\nol[class],\r\nli,\r\nfigure,\r\nfigcaption,\r\nblockquote,\r\ndl,\r\ndd {\r\n  margin: 0;\r\n}\r\n\r\n/* Set core body defaults */\r\nbody {\r\n  min-height: 100vh;\r\n  scroll-behavior: smooth;\r\n  text-rendering: optimizeSpeed;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Remove list styles on ul, ol elements with a class attribute */\r\nul[class],\r\nol[class] {\r\n  list-style: none;\r\n}\r\n\r\n/* A elements that don't have a class get default styles */\r\na:not([class]) {\r\n  text-decoration-skip-ink: auto;\r\n}\r\n\r\n/* Make images easier to work with */\r\nimg {\r\n  max-width: 100%;\r\n  display: block;\r\n}\r\n\r\n/* Natural flow and rhythm in articles by default */\r\narticle > * + * {\r\n  margin-top: 1em;\r\n}\r\n\r\n/* Inherit fonts for inputs and buttons */\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect {\r\n  font: inherit;\r\n}\r\n\r\n/* Remove all animations and transitions for people that prefer not to see them */\r\n@media (prefers-reduced-motion: reduce) {\r\n  * {\r\n    animation-duration: 0.01ms !important;\r\n    animation-iteration-count: 1 !important;\r\n    transition-duration: 0.01ms !important;\r\n    scroll-behavior: auto !important;\r\n  }\r\n}","@import url('https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400;0,600;1,400;1,600&family=Roboto:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap')\r\n\r\n// use mixin configuring the font stack\r\n@mixin font($group, $variant: regular, $properties: family weight style, $stack: $font-stack)\r\n    $font-properties: map-deep-get($stack, $group, $variant)\r\n\r\n    @if $font-properties\r\n        @each $property, $values in $font-properties\r\n            @if contains($properties, $property)\r\n                font-#{$property}: map-get($font-properties, $property)\r\n\r\n// configuring fonts\r\n// header fonts\r\nh1, h2, h3, h4\r\n    @include font(roboto, bold)\r\n\r\n// base fonts\r\np\r\n    @include font(lora, regular)\r\n\r\np.blocknote\r\n    @include font(lora, regular-italic)\r\n\r\na\r\n    @include font(lora, bold)\r\n",":root\r\n    // add color variables\r\n    @each $color, $shades in $colors\r\n        @each $shade, $value in $shades\r\n            --clr-#{$color}-#{$shade}: #{$value}\r\n\r\n    // add media query breakpoints variables\r\n    @each $prop, $value in $breakpoints\r\n        --#{$prop}: #{$value}\r\n\r\n    // layout variables\r\n    @each $screen-size, $variables in $layout\r\n        @if $screen-size == small\r\n            @each $prop, $value in $variables\r\n                --#{$prop}: #{$value}\r\n        @else\r\n            @media (min-width: 1024px)\r\n                @each $prop, $value in $variables\r\n                    --#{$prop}: #{$value}\r\n\r\n    // responsive font-size variables\r\n    @each $screen-size, $font-size in $type-scale\r\n        @if $screen-size == small\r\n            @each $prop, $value in $font-size\r\n                --#{$prop}: #{$value}\r\n        @else\r\n            @media (min-width: 1024px)\r\n                @each $prop, $value in $font-size\r\n                    --#{$prop}: #{$value}\r\n\r\n    // add grid variables\r\n    @each $prop, $value in $grid\r\n        --#{$prop}: #{$value}\r\n\r\n    // type-scale and line-heights variable\r\n    --h4: calc(var(--font-size) * var(--ratio))\r\n    --h3: calc(var(--h4) * var(--ratio))\r\n    --h2: calc(var(--h3) * var(--ratio))\r\n    --h1: calc(var(--h2) * var(--ratio))\r\n","p\r\n    font-size: var(--font-size)\r\n    line-height: var(--ratio)\r\n\r\nh1\r\n    font-size: var(--h1)\r\n    line-height: calc(var(--h1) * var(--ratio))\r\n\r\nh2\r\n    font-size: var(--h2)\r\n    line-height: calc(var(--h2) * var(--ratio))\r\n\r\nh3\r\n    font-size: var(--h3)\r\n    line-height: calc(var(--h3) * var(--ratio))\r\n\r\nh4\r\n    font-size: var(--h4)\r\n    line-height: calc(var(--h4) * var(--ratio))\r\n\r\n.semi-bold\r\n    font-weight: var(--body-w-500)\r\n\r\n.bold\r\n    font-weight: var(--body-w-700)\r\n\r\n.uppercase\r\n    text-transform: uppercase\r\n\r\n.blocknote\r\n    padding-left: var(--spacer)\r\n    border-left: var(--border) solid var(--clr-secondary-200)\r\n\r\n.letter-spacing\r\n    letter-spacing: var(--gap)\r\n","html, body\r\n    height: 100%\r\n\r\nbody\r\n    font-family: var(--body-font), var(--body-type)\r\n    font-size: var(--font-size)\r\n    color: var(--clr-primary-300)\r\n    background: var(--clr-background-100)\r\n    -webkit-font-smoothing: antialiased\r\n    -webkit-text-size-adjust: 100%\r\n\r\n*\r\n    box-sizing: border-box\r\n","@for $i from 1 through 5\r\n    // margin\r\n    .m-#{$i}\r\n        margin: calc(var(--spacer) * #{$i})\r\n    .m-x-#{$i}\r\n        margin: 0 calc(var(--spacer) * #{$i})\r\n    .m-y-#{$i}\r\n        margin: calc(var(--spacer) * #{$i}) 0\r\n    .m-l-#{$i}\r\n        margin-left: calc(var(--spacer) * #{$i})\r\n    .m-r-#{$i}\r\n        margin-right: calc(var(--spacer) * #{$i})\r\n    .m-t-#{$i}\r\n        margin-top: calc(var(--spacer) * #{$i})\r\n\r\n    // padding\r\n    .p-#{$i}\r\n        padding: calc(var(--spacer) * #{$i})\r\n    .p-x-#{$i}\r\n        padding: 0 calc(var(--spacer) * #{$i})\r\n    .p-y-#{$i}\r\n        padding: calc(var(--spacer) * #{$i}) 0\r\n    .p-l-#{$i}\r\n        padding-left: calc(var(--spacer) * #{$i})\r\n    .p-r-#{$i}\r\n        padding-right: calc(var(--spacer) * #{$i})\r\n    .p-t-#{$i}\r\n        padding-top: calc(var(--spacer) * #{$i})\r\n\r\n    // height\r\n    .h-#{$i}\r\n        height: calc(var(--spacer) * #{$i})\r\n\r\n    //width\r\n    .w-#{$i}\r\n        width: calc(var(--spacer) * #{$i})\r\n\r\n    //divider\r\n    .divider-#{$i}\r\n        height: calc(var(--spacer) * #{$i})\r\n        width: 100%\r\n","@each $color, $shades in $colors\r\n    @each $shade, $value in $shades\r\n        .text-#{$color}-#{$shade}\r\n            color: var(--clr-#{$color}-#{$shade})\r\n        .bg-#{$color}-#{$shade}\r\n            background: var(--clr-#{$color}-#{$shade})\r\n","a, ul, li\r\n    margin: 0\r\n    padding: 0\r\n    cursor: pointer\r\n\r\na\r\n    font-size: var(--font-size)\r\n    text-decoration: none\r\n    decoration: none\r\n    outline: 0\r\n    line-height: 0\r\n    opacity: 1\r\n    transitio: opacity 0.3s ease-in-out\r\n    color: var(--clr-secondary-200)\r\n\r\n    &:hover,\r\n    &:focus\r\n        opacity: 0.8\r\n        transition: opacity 0.3s ease-in-out\r\n\r\nul\r\n    list-style: none\r\n",".container\r\n    width: calc(100% - var(--margin)*2)\r\n    max-width: var(--xl)\r\n    margin: 0 auto\r\n","$column: map-get($grid, column)\r\n\r\n.row\r\n    display: flex\r\n    flex-wrap: wrap\r\n\r\n[class^=col-]\r\n    flex-basis: 100%\r\n\r\n@for $i from 1 through $column\r\n    .col-#{$i}\r\n        padding: var(--gap)\r\n        flex: 0 0 100%\r\n        +mq(lg)\r\n            flex: 0 0 (100% / ($column / $i))\r\n    .col-offset-#{$i}\r\n        margin-left: 0\r\n        +mq(lg)\r\n            margin-left: 100% / ($column / $i)\r\n","@mixin mq($key)\r\n    $size: map-get($breakpoints, $key)\r\n    @media (min-width: $size)\r\n        @content\r\n","// grid.pug    \r\n.col\r\n    height: 4rem\r\n\r\n    &-content\r\n        display: flex\r\n        align-items: center\r\n        justify-content: center\r\n        color: rgba(white, .6)\r\n        height: 100%\r\n"]}